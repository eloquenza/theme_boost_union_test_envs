server {
    listen         80;
    server_name    $REPLACE_BASE_URL;
    return         301 https://$host$request_uri;
}

server {
    server_name                 $REPLACE_BASE_URL;
    listen                      443 ssl;
    ssl_session_cache           shared:SSL:5m;
    ssl_session_timeout         6h;
    ssl_buffer_size             4k;
    ssl_session_tickets         off;
    ssl_certificate             $REPLACE_CERT_PATH;
    ssl_certificate_key         $REPLACE_PRIVKEY_PATH;
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 "ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256";
    client_max_body_size 134217728;
    server_tokens off;

    access_log "$REPLACE_ACCESS_LOG_PATH";
    error_log "$REPLACE_ERROR_LOG_PATH";

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    error_page 400 402 403 404 /local/staticpage/view.php?page=404;

    location /$REPLACE_LOCATION {
        # Careful: the trailing slash here is _MANDATORY_:
        # It changes the behaviour of proxy_pass!
        # Due to it, the proxy_pass directive thinks we have specified a URI to which the request should be mapped.
        # Without it, requests to this sub-location will be forwarded to the proxy like follows: http://127.0.0.1:$REPLACE_PORT/$REPLACE_LOCATION/; essentially appending the "$REPLACE_LOCATION" again to the proxied URL, which Moodle of course will not know
        # This breaks the reverse proxy setup we want.
        # With it, the requests will be mapped correctly to http://127.0.0.1:$REPLACE_PORT/ - to be precise, actually to http://127.0.0.1:$REPLACE_PORT//
        proxy_pass http://127.0.0.1:$REPLACE_PORT/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $server;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 1000s;
        proxy_redirect default;
    }

}
